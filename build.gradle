buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "beta-${mod_version}"
group = "guntram.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "official", version: "${mc_version}"

    runs {
        client {
            workingDirectory project.file('run')
            args "-mixin.config=" + archivesBaseName + ".mixins.json", "-mixin.config=" + archivesBaseName + "_debug.mixins.json"


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                shutupexperimentalsettings {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            args "-mixin.config=" + archivesBaseName + ".mixins.json", "-mixin.config=" + archivesBaseName + "_debug.mixins.json"

            property 'forge.logging.console.level', 'debug'

            mods {
                shutupexperimentalsettings {
                    source sourceSets.main
                }
            }
        }
    }
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

repositories {
    mavenCentral()
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = 'Curse Maven'
        url = 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor' //Re-enable when building jar

    implementation fg.deobf("curse.maven:ellemes-container-library1.4.0-beta.2+forge-530668:3813786")
    implementation fg.deobf("curse.maven:sophisticated-core-618298:3847441")
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:3847503")

    //compileOnly files('/atonkish.reinfcore:reinforced-core:1.1.0');
    //compileOnly files('/home/gbl/SoftwareProjects/GitClones/MinecraftMods/inmis/build/libs/inmis-2.3.2-1.17.1-dev.jar');
    //compileOnly files('/home/gbl/SoftwareProjects/GitClones/MinecraftMods/container-library/build/fabric/libs/ninjaphenix-container-library-1.2.2+1.17.1-dev.jar');
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modid}",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "${modid}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${modid}.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")

def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}
